// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessage.proto

package com.randioo.chat_server.protocol;

public final class ServerMessage {
  private ServerMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class SC extends
      com.google.protobuf.GeneratedMessage {
    // Use SC.newBuilder() to construct.
    private SC() {
      initFields();
    }
    private SC(boolean noInit) {}
    
    private static final SC defaultInstance;
    public static SC getDefaultInstance() {
      return defaultInstance;
    }
    
    public SC getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.chat_server.protocol.ServerMessage.internal_static_com_randioo_chat_server_protocol_SC_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.chat_server.protocol.ServerMessage.internal_static_com_randioo_chat_server_protocol_SC_fieldAccessorTable;
    }
    
    // optional .com.randioo.chat_server.protocol.LoginResponse LoginResponse = 1;
    public static final int LOGINRESPONSE_FIELD_NUMBER = 1;
    private boolean hasLoginResponse;
    private com.randioo.chat_server.protocol.Login.LoginResponse loginResponse_;
    public boolean hasLoginResponse() { return hasLoginResponse; }
    public com.randioo.chat_server.protocol.Login.LoginResponse getLoginResponse() { return loginResponse_; }
    
    // optional .com.randioo.chat_server.protocol.ChatSendResponse ChatSendResponse = 2;
    public static final int CHATSENDRESPONSE_FIELD_NUMBER = 2;
    private boolean hasChatSendResponse;
    private com.randioo.chat_server.protocol.Chat.ChatSendResponse chatSendResponse_;
    public boolean hasChatSendResponse() { return hasChatSendResponse; }
    public com.randioo.chat_server.protocol.Chat.ChatSendResponse getChatSendResponse() { return chatSendResponse_; }
    
    // optional .com.randioo.chat_server.protocol.ChatJoinRoomResponse ChatJoinRoomResponse = 3;
    public static final int CHATJOINROOMRESPONSE_FIELD_NUMBER = 3;
    private boolean hasChatJoinRoomResponse;
    private com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse chatJoinRoomResponse_;
    public boolean hasChatJoinRoomResponse() { return hasChatJoinRoomResponse; }
    public com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse getChatJoinRoomResponse() { return chatJoinRoomResponse_; }
    
    // optional .com.randioo.chat_server.protocol.ChatQuitRoomResponse ChatQuitRoomResponse = 4;
    public static final int CHATQUITROOMRESPONSE_FIELD_NUMBER = 4;
    private boolean hasChatQuitRoomResponse;
    private com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse chatQuitRoomResponse_;
    public boolean hasChatQuitRoomResponse() { return hasChatQuitRoomResponse; }
    public com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse getChatQuitRoomResponse() { return chatQuitRoomResponse_; }
    
    // optional .com.randioo.chat_server.protocol.SCChat SCChat = 5;
    public static final int SCCHAT_FIELD_NUMBER = 5;
    private boolean hasSCChat;
    private com.randioo.chat_server.protocol.Chat.SCChat sCChat_;
    public boolean hasSCChat() { return hasSCChat; }
    public com.randioo.chat_server.protocol.Chat.SCChat getSCChat() { return sCChat_; }
    
    // optional .com.randioo.chat_server.protocol.HeartResponse HeartResponse = 6;
    public static final int HEARTRESPONSE_FIELD_NUMBER = 6;
    private boolean hasHeartResponse;
    private com.randioo.chat_server.protocol.Heart.HeartResponse heartResponse_;
    public boolean hasHeartResponse() { return hasHeartResponse; }
    public com.randioo.chat_server.protocol.Heart.HeartResponse getHeartResponse() { return heartResponse_; }
    
    // optional .com.randioo.chat_server.protocol.SCHeart SCHeart = 7;
    public static final int SCHEART_FIELD_NUMBER = 7;
    private boolean hasSCHeart;
    private com.randioo.chat_server.protocol.Heart.SCHeart sCHeart_;
    public boolean hasSCHeart() { return hasSCHeart; }
    public com.randioo.chat_server.protocol.Heart.SCHeart getSCHeart() { return sCHeart_; }
    
    private void initFields() {
      loginResponse_ = com.randioo.chat_server.protocol.Login.LoginResponse.getDefaultInstance();
      chatSendResponse_ = com.randioo.chat_server.protocol.Chat.ChatSendResponse.getDefaultInstance();
      chatJoinRoomResponse_ = com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.getDefaultInstance();
      chatQuitRoomResponse_ = com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.getDefaultInstance();
      sCChat_ = com.randioo.chat_server.protocol.Chat.SCChat.getDefaultInstance();
      heartResponse_ = com.randioo.chat_server.protocol.Heart.HeartResponse.getDefaultInstance();
      sCHeart_ = com.randioo.chat_server.protocol.Heart.SCHeart.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLoginResponse()) {
        output.writeMessage(1, getLoginResponse());
      }
      if (hasChatSendResponse()) {
        output.writeMessage(2, getChatSendResponse());
      }
      if (hasChatJoinRoomResponse()) {
        output.writeMessage(3, getChatJoinRoomResponse());
      }
      if (hasChatQuitRoomResponse()) {
        output.writeMessage(4, getChatQuitRoomResponse());
      }
      if (hasSCChat()) {
        output.writeMessage(5, getSCChat());
      }
      if (hasHeartResponse()) {
        output.writeMessage(6, getHeartResponse());
      }
      if (hasSCHeart()) {
        output.writeMessage(7, getSCHeart());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLoginResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoginResponse());
      }
      if (hasChatSendResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChatSendResponse());
      }
      if (hasChatJoinRoomResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChatJoinRoomResponse());
      }
      if (hasChatQuitRoomResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getChatQuitRoomResponse());
      }
      if (hasSCChat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSCChat());
      }
      if (hasHeartResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHeartResponse());
      }
      if (hasSCHeart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSCHeart());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ServerMessage.SC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.chat_server.protocol.ServerMessage.SC prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.chat_server.protocol.ServerMessage.SC result;
      
      // Construct using com.randioo.chat_server.protocol.ServerMessage.SC.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.chat_server.protocol.ServerMessage.SC();
        return builder;
      }
      
      protected com.randioo.chat_server.protocol.ServerMessage.SC internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.chat_server.protocol.ServerMessage.SC();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.chat_server.protocol.ServerMessage.SC.getDescriptor();
      }
      
      public com.randioo.chat_server.protocol.ServerMessage.SC getDefaultInstanceForType() {
        return com.randioo.chat_server.protocol.ServerMessage.SC.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.chat_server.protocol.ServerMessage.SC build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.chat_server.protocol.ServerMessage.SC buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.chat_server.protocol.ServerMessage.SC buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.chat_server.protocol.ServerMessage.SC returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.chat_server.protocol.ServerMessage.SC) {
          return mergeFrom((com.randioo.chat_server.protocol.ServerMessage.SC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.chat_server.protocol.ServerMessage.SC other) {
        if (other == com.randioo.chat_server.protocol.ServerMessage.SC.getDefaultInstance()) return this;
        if (other.hasLoginResponse()) {
          mergeLoginResponse(other.getLoginResponse());
        }
        if (other.hasChatSendResponse()) {
          mergeChatSendResponse(other.getChatSendResponse());
        }
        if (other.hasChatJoinRoomResponse()) {
          mergeChatJoinRoomResponse(other.getChatJoinRoomResponse());
        }
        if (other.hasChatQuitRoomResponse()) {
          mergeChatQuitRoomResponse(other.getChatQuitRoomResponse());
        }
        if (other.hasSCChat()) {
          mergeSCChat(other.getSCChat());
        }
        if (other.hasHeartResponse()) {
          mergeHeartResponse(other.getHeartResponse());
        }
        if (other.hasSCHeart()) {
          mergeSCHeart(other.getSCHeart());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.chat_server.protocol.Login.LoginResponse.Builder subBuilder = com.randioo.chat_server.protocol.Login.LoginResponse.newBuilder();
              if (hasLoginResponse()) {
                subBuilder.mergeFrom(getLoginResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginResponse(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.chat_server.protocol.Chat.ChatSendResponse.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatSendResponse.newBuilder();
              if (hasChatSendResponse()) {
                subBuilder.mergeFrom(getChatSendResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatSendResponse(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.newBuilder();
              if (hasChatJoinRoomResponse()) {
                subBuilder.mergeFrom(getChatJoinRoomResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatJoinRoomResponse(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.newBuilder();
              if (hasChatQuitRoomResponse()) {
                subBuilder.mergeFrom(getChatQuitRoomResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatQuitRoomResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.chat_server.protocol.Chat.SCChat.Builder subBuilder = com.randioo.chat_server.protocol.Chat.SCChat.newBuilder();
              if (hasSCChat()) {
                subBuilder.mergeFrom(getSCChat());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCChat(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.randioo.chat_server.protocol.Heart.HeartResponse.Builder subBuilder = com.randioo.chat_server.protocol.Heart.HeartResponse.newBuilder();
              if (hasHeartResponse()) {
                subBuilder.mergeFrom(getHeartResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartResponse(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.randioo.chat_server.protocol.Heart.SCHeart.Builder subBuilder = com.randioo.chat_server.protocol.Heart.SCHeart.newBuilder();
              if (hasSCHeart()) {
                subBuilder.mergeFrom(getSCHeart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSCHeart(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.chat_server.protocol.LoginResponse LoginResponse = 1;
      public boolean hasLoginResponse() {
        return result.hasLoginResponse();
      }
      public com.randioo.chat_server.protocol.Login.LoginResponse getLoginResponse() {
        return result.getLoginResponse();
      }
      public Builder setLoginResponse(com.randioo.chat_server.protocol.Login.LoginResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginResponse = true;
        result.loginResponse_ = value;
        return this;
      }
      public Builder setLoginResponse(com.randioo.chat_server.protocol.Login.LoginResponse.Builder builderForValue) {
        result.hasLoginResponse = true;
        result.loginResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginResponse(com.randioo.chat_server.protocol.Login.LoginResponse value) {
        if (result.hasLoginResponse() &&
            result.loginResponse_ != com.randioo.chat_server.protocol.Login.LoginResponse.getDefaultInstance()) {
          result.loginResponse_ =
            com.randioo.chat_server.protocol.Login.LoginResponse.newBuilder(result.loginResponse_).mergeFrom(value).buildPartial();
        } else {
          result.loginResponse_ = value;
        }
        result.hasLoginResponse = true;
        return this;
      }
      public Builder clearLoginResponse() {
        result.hasLoginResponse = false;
        result.loginResponse_ = com.randioo.chat_server.protocol.Login.LoginResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatSendResponse ChatSendResponse = 2;
      public boolean hasChatSendResponse() {
        return result.hasChatSendResponse();
      }
      public com.randioo.chat_server.protocol.Chat.ChatSendResponse getChatSendResponse() {
        return result.getChatSendResponse();
      }
      public Builder setChatSendResponse(com.randioo.chat_server.protocol.Chat.ChatSendResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatSendResponse = true;
        result.chatSendResponse_ = value;
        return this;
      }
      public Builder setChatSendResponse(com.randioo.chat_server.protocol.Chat.ChatSendResponse.Builder builderForValue) {
        result.hasChatSendResponse = true;
        result.chatSendResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatSendResponse(com.randioo.chat_server.protocol.Chat.ChatSendResponse value) {
        if (result.hasChatSendResponse() &&
            result.chatSendResponse_ != com.randioo.chat_server.protocol.Chat.ChatSendResponse.getDefaultInstance()) {
          result.chatSendResponse_ =
            com.randioo.chat_server.protocol.Chat.ChatSendResponse.newBuilder(result.chatSendResponse_).mergeFrom(value).buildPartial();
        } else {
          result.chatSendResponse_ = value;
        }
        result.hasChatSendResponse = true;
        return this;
      }
      public Builder clearChatSendResponse() {
        result.hasChatSendResponse = false;
        result.chatSendResponse_ = com.randioo.chat_server.protocol.Chat.ChatSendResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatJoinRoomResponse ChatJoinRoomResponse = 3;
      public boolean hasChatJoinRoomResponse() {
        return result.hasChatJoinRoomResponse();
      }
      public com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse getChatJoinRoomResponse() {
        return result.getChatJoinRoomResponse();
      }
      public Builder setChatJoinRoomResponse(com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatJoinRoomResponse = true;
        result.chatJoinRoomResponse_ = value;
        return this;
      }
      public Builder setChatJoinRoomResponse(com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.Builder builderForValue) {
        result.hasChatJoinRoomResponse = true;
        result.chatJoinRoomResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatJoinRoomResponse(com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse value) {
        if (result.hasChatJoinRoomResponse() &&
            result.chatJoinRoomResponse_ != com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.getDefaultInstance()) {
          result.chatJoinRoomResponse_ =
            com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.newBuilder(result.chatJoinRoomResponse_).mergeFrom(value).buildPartial();
        } else {
          result.chatJoinRoomResponse_ = value;
        }
        result.hasChatJoinRoomResponse = true;
        return this;
      }
      public Builder clearChatJoinRoomResponse() {
        result.hasChatJoinRoomResponse = false;
        result.chatJoinRoomResponse_ = com.randioo.chat_server.protocol.Chat.ChatJoinRoomResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatQuitRoomResponse ChatQuitRoomResponse = 4;
      public boolean hasChatQuitRoomResponse() {
        return result.hasChatQuitRoomResponse();
      }
      public com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse getChatQuitRoomResponse() {
        return result.getChatQuitRoomResponse();
      }
      public Builder setChatQuitRoomResponse(com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatQuitRoomResponse = true;
        result.chatQuitRoomResponse_ = value;
        return this;
      }
      public Builder setChatQuitRoomResponse(com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.Builder builderForValue) {
        result.hasChatQuitRoomResponse = true;
        result.chatQuitRoomResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatQuitRoomResponse(com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse value) {
        if (result.hasChatQuitRoomResponse() &&
            result.chatQuitRoomResponse_ != com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.getDefaultInstance()) {
          result.chatQuitRoomResponse_ =
            com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.newBuilder(result.chatQuitRoomResponse_).mergeFrom(value).buildPartial();
        } else {
          result.chatQuitRoomResponse_ = value;
        }
        result.hasChatQuitRoomResponse = true;
        return this;
      }
      public Builder clearChatQuitRoomResponse() {
        result.hasChatQuitRoomResponse = false;
        result.chatQuitRoomResponse_ = com.randioo.chat_server.protocol.Chat.ChatQuitRoomResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.SCChat SCChat = 5;
      public boolean hasSCChat() {
        return result.hasSCChat();
      }
      public com.randioo.chat_server.protocol.Chat.SCChat getSCChat() {
        return result.getSCChat();
      }
      public Builder setSCChat(com.randioo.chat_server.protocol.Chat.SCChat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCChat = true;
        result.sCChat_ = value;
        return this;
      }
      public Builder setSCChat(com.randioo.chat_server.protocol.Chat.SCChat.Builder builderForValue) {
        result.hasSCChat = true;
        result.sCChat_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCChat(com.randioo.chat_server.protocol.Chat.SCChat value) {
        if (result.hasSCChat() &&
            result.sCChat_ != com.randioo.chat_server.protocol.Chat.SCChat.getDefaultInstance()) {
          result.sCChat_ =
            com.randioo.chat_server.protocol.Chat.SCChat.newBuilder(result.sCChat_).mergeFrom(value).buildPartial();
        } else {
          result.sCChat_ = value;
        }
        result.hasSCChat = true;
        return this;
      }
      public Builder clearSCChat() {
        result.hasSCChat = false;
        result.sCChat_ = com.randioo.chat_server.protocol.Chat.SCChat.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.HeartResponse HeartResponse = 6;
      public boolean hasHeartResponse() {
        return result.hasHeartResponse();
      }
      public com.randioo.chat_server.protocol.Heart.HeartResponse getHeartResponse() {
        return result.getHeartResponse();
      }
      public Builder setHeartResponse(com.randioo.chat_server.protocol.Heart.HeartResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeartResponse = true;
        result.heartResponse_ = value;
        return this;
      }
      public Builder setHeartResponse(com.randioo.chat_server.protocol.Heart.HeartResponse.Builder builderForValue) {
        result.hasHeartResponse = true;
        result.heartResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeartResponse(com.randioo.chat_server.protocol.Heart.HeartResponse value) {
        if (result.hasHeartResponse() &&
            result.heartResponse_ != com.randioo.chat_server.protocol.Heart.HeartResponse.getDefaultInstance()) {
          result.heartResponse_ =
            com.randioo.chat_server.protocol.Heart.HeartResponse.newBuilder(result.heartResponse_).mergeFrom(value).buildPartial();
        } else {
          result.heartResponse_ = value;
        }
        result.hasHeartResponse = true;
        return this;
      }
      public Builder clearHeartResponse() {
        result.hasHeartResponse = false;
        result.heartResponse_ = com.randioo.chat_server.protocol.Heart.HeartResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.SCHeart SCHeart = 7;
      public boolean hasSCHeart() {
        return result.hasSCHeart();
      }
      public com.randioo.chat_server.protocol.Heart.SCHeart getSCHeart() {
        return result.getSCHeart();
      }
      public Builder setSCHeart(com.randioo.chat_server.protocol.Heart.SCHeart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSCHeart = true;
        result.sCHeart_ = value;
        return this;
      }
      public Builder setSCHeart(com.randioo.chat_server.protocol.Heart.SCHeart.Builder builderForValue) {
        result.hasSCHeart = true;
        result.sCHeart_ = builderForValue.build();
        return this;
      }
      public Builder mergeSCHeart(com.randioo.chat_server.protocol.Heart.SCHeart value) {
        if (result.hasSCHeart() &&
            result.sCHeart_ != com.randioo.chat_server.protocol.Heart.SCHeart.getDefaultInstance()) {
          result.sCHeart_ =
            com.randioo.chat_server.protocol.Heart.SCHeart.newBuilder(result.sCHeart_).mergeFrom(value).buildPartial();
        } else {
          result.sCHeart_ = value;
        }
        result.hasSCHeart = true;
        return this;
      }
      public Builder clearSCHeart() {
        result.hasSCHeart = false;
        result.sCHeart_ = com.randioo.chat_server.protocol.Heart.SCHeart.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.chat_server.protocol.SC)
    }
    
    static {
      defaultInstance = new SC(true);
      com.randioo.chat_server.protocol.ServerMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.chat_server.protocol.SC)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_chat_server_protocol_SC_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_chat_server_protocol_SC_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ServerMessage.proto\022 com.randioo.chat_" +
      "server.protocol\032\nChat.proto\032\013Login.proto" +
      "\032\013Heart.proto\"\204\004\n\002SC\022F\n\rLoginResponse\030\001 " +
      "\001(\0132/.com.randioo.chat_server.protocol.L" +
      "oginResponse\022L\n\020ChatSendResponse\030\002 \001(\01322" +
      ".com.randioo.chat_server.protocol.ChatSe" +
      "ndResponse\022T\n\024ChatJoinRoomResponse\030\003 \001(\013" +
      "26.com.randioo.chat_server.protocol.Chat" +
      "JoinRoomResponse\022T\n\024ChatQuitRoomResponse" +
      "\030\004 \001(\01326.com.randioo.chat_server.protoco",
      "l.ChatQuitRoomResponse\0228\n\006SCChat\030\005 \001(\0132(" +
      ".com.randioo.chat_server.protocol.SCChat" +
      "\022F\n\rHeartResponse\030\006 \001(\0132/.com.randioo.ch" +
      "at_server.protocol.HeartResponse\022:\n\007SCHe" +
      "art\030\007 \001(\0132).com.randioo.chat_server.prot" +
      "ocol.SCHeart"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_chat_server_protocol_SC_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_chat_server_protocol_SC_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_chat_server_protocol_SC_descriptor,
              new java.lang.String[] { "LoginResponse", "ChatSendResponse", "ChatJoinRoomResponse", "ChatQuitRoomResponse", "SCChat", "HeartResponse", "SCHeart", },
              com.randioo.chat_server.protocol.ServerMessage.SC.class,
              com.randioo.chat_server.protocol.ServerMessage.SC.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.chat_server.protocol.Chat.getDescriptor(),
          com.randioo.chat_server.protocol.Login.getDescriptor(),
          com.randioo.chat_server.protocol.Heart.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
