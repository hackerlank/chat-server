// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

package com.randioo.chat_server.protocol;

public final class ClientMessage {
  private ClientMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CS extends
      com.google.protobuf.GeneratedMessage {
    // Use CS.newBuilder() to construct.
    private CS() {
      initFields();
    }
    private CS(boolean noInit) {}
    
    private static final CS defaultInstance;
    public static CS getDefaultInstance() {
      return defaultInstance;
    }
    
    public CS getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.chat_server.protocol.ClientMessage.internal_static_com_randioo_chat_server_protocol_CS_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.chat_server.protocol.ClientMessage.internal_static_com_randioo_chat_server_protocol_CS_fieldAccessorTable;
    }
    
    // optional .com.randioo.chat_server.protocol.LoginRequest LoginRequest = 1;
    public static final int LOGINREQUEST_FIELD_NUMBER = 1;
    private boolean hasLoginRequest;
    private com.randioo.chat_server.protocol.Login.LoginRequest loginRequest_;
    public boolean hasLoginRequest() { return hasLoginRequest; }
    public com.randioo.chat_server.protocol.Login.LoginRequest getLoginRequest() { return loginRequest_; }
    
    // optional .com.randioo.chat_server.protocol.ChatSendRequest ChatSendRequest = 2;
    public static final int CHATSENDREQUEST_FIELD_NUMBER = 2;
    private boolean hasChatSendRequest;
    private com.randioo.chat_server.protocol.Chat.ChatSendRequest chatSendRequest_;
    public boolean hasChatSendRequest() { return hasChatSendRequest; }
    public com.randioo.chat_server.protocol.Chat.ChatSendRequest getChatSendRequest() { return chatSendRequest_; }
    
    // optional .com.randioo.chat_server.protocol.ChatJoinRoomRequest ChatJoinRoomRequest = 3;
    public static final int CHATJOINROOMREQUEST_FIELD_NUMBER = 3;
    private boolean hasChatJoinRoomRequest;
    private com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest chatJoinRoomRequest_;
    public boolean hasChatJoinRoomRequest() { return hasChatJoinRoomRequest; }
    public com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest getChatJoinRoomRequest() { return chatJoinRoomRequest_; }
    
    // optional .com.randioo.chat_server.protocol.ChatQuitRoomRequest ChatQuitRoomRequest = 4;
    public static final int CHATQUITROOMREQUEST_FIELD_NUMBER = 4;
    private boolean hasChatQuitRoomRequest;
    private com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest chatQuitRoomRequest_;
    public boolean hasChatQuitRoomRequest() { return hasChatQuitRoomRequest; }
    public com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest getChatQuitRoomRequest() { return chatQuitRoomRequest_; }
    
    // optional .com.randioo.chat_server.protocol.HeartRequest HeartRequest = 5;
    public static final int HEARTREQUEST_FIELD_NUMBER = 5;
    private boolean hasHeartRequest;
    private com.randioo.chat_server.protocol.Heart.HeartRequest heartRequest_;
    public boolean hasHeartRequest() { return hasHeartRequest; }
    public com.randioo.chat_server.protocol.Heart.HeartRequest getHeartRequest() { return heartRequest_; }
    
    // optional .com.randioo.chat_server.protocol.CSHeart CSHeart = 6;
    public static final int CSHEART_FIELD_NUMBER = 6;
    private boolean hasCSHeart;
    private com.randioo.chat_server.protocol.Heart.CSHeart cSHeart_;
    public boolean hasCSHeart() { return hasCSHeart; }
    public com.randioo.chat_server.protocol.Heart.CSHeart getCSHeart() { return cSHeart_; }
    
    private void initFields() {
      loginRequest_ = com.randioo.chat_server.protocol.Login.LoginRequest.getDefaultInstance();
      chatSendRequest_ = com.randioo.chat_server.protocol.Chat.ChatSendRequest.getDefaultInstance();
      chatJoinRoomRequest_ = com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.getDefaultInstance();
      chatQuitRoomRequest_ = com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.getDefaultInstance();
      heartRequest_ = com.randioo.chat_server.protocol.Heart.HeartRequest.getDefaultInstance();
      cSHeart_ = com.randioo.chat_server.protocol.Heart.CSHeart.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLoginRequest()) {
        output.writeMessage(1, getLoginRequest());
      }
      if (hasChatSendRequest()) {
        output.writeMessage(2, getChatSendRequest());
      }
      if (hasChatJoinRoomRequest()) {
        output.writeMessage(3, getChatJoinRoomRequest());
      }
      if (hasChatQuitRoomRequest()) {
        output.writeMessage(4, getChatQuitRoomRequest());
      }
      if (hasHeartRequest()) {
        output.writeMessage(5, getHeartRequest());
      }
      if (hasCSHeart()) {
        output.writeMessage(6, getCSHeart());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLoginRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoginRequest());
      }
      if (hasChatSendRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getChatSendRequest());
      }
      if (hasChatJoinRoomRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChatJoinRoomRequest());
      }
      if (hasChatQuitRoomRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getChatQuitRoomRequest());
      }
      if (hasHeartRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHeartRequest());
      }
      if (hasCSHeart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCSHeart());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.ClientMessage.CS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.chat_server.protocol.ClientMessage.CS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.chat_server.protocol.ClientMessage.CS result;
      
      // Construct using com.randioo.chat_server.protocol.ClientMessage.CS.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.chat_server.protocol.ClientMessage.CS();
        return builder;
      }
      
      protected com.randioo.chat_server.protocol.ClientMessage.CS internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.chat_server.protocol.ClientMessage.CS();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.chat_server.protocol.ClientMessage.CS.getDescriptor();
      }
      
      public com.randioo.chat_server.protocol.ClientMessage.CS getDefaultInstanceForType() {
        return com.randioo.chat_server.protocol.ClientMessage.CS.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.chat_server.protocol.ClientMessage.CS build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.chat_server.protocol.ClientMessage.CS buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.chat_server.protocol.ClientMessage.CS buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.chat_server.protocol.ClientMessage.CS returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.chat_server.protocol.ClientMessage.CS) {
          return mergeFrom((com.randioo.chat_server.protocol.ClientMessage.CS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.chat_server.protocol.ClientMessage.CS other) {
        if (other == com.randioo.chat_server.protocol.ClientMessage.CS.getDefaultInstance()) return this;
        if (other.hasLoginRequest()) {
          mergeLoginRequest(other.getLoginRequest());
        }
        if (other.hasChatSendRequest()) {
          mergeChatSendRequest(other.getChatSendRequest());
        }
        if (other.hasChatJoinRoomRequest()) {
          mergeChatJoinRoomRequest(other.getChatJoinRoomRequest());
        }
        if (other.hasChatQuitRoomRequest()) {
          mergeChatQuitRoomRequest(other.getChatQuitRoomRequest());
        }
        if (other.hasHeartRequest()) {
          mergeHeartRequest(other.getHeartRequest());
        }
        if (other.hasCSHeart()) {
          mergeCSHeart(other.getCSHeart());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.randioo.chat_server.protocol.Login.LoginRequest.Builder subBuilder = com.randioo.chat_server.protocol.Login.LoginRequest.newBuilder();
              if (hasLoginRequest()) {
                subBuilder.mergeFrom(getLoginRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLoginRequest(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.randioo.chat_server.protocol.Chat.ChatSendRequest.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatSendRequest.newBuilder();
              if (hasChatSendRequest()) {
                subBuilder.mergeFrom(getChatSendRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatSendRequest(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.newBuilder();
              if (hasChatJoinRoomRequest()) {
                subBuilder.mergeFrom(getChatJoinRoomRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatJoinRoomRequest(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.Builder subBuilder = com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.newBuilder();
              if (hasChatQuitRoomRequest()) {
                subBuilder.mergeFrom(getChatQuitRoomRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setChatQuitRoomRequest(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.randioo.chat_server.protocol.Heart.HeartRequest.Builder subBuilder = com.randioo.chat_server.protocol.Heart.HeartRequest.newBuilder();
              if (hasHeartRequest()) {
                subBuilder.mergeFrom(getHeartRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeartRequest(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.randioo.chat_server.protocol.Heart.CSHeart.Builder subBuilder = com.randioo.chat_server.protocol.Heart.CSHeart.newBuilder();
              if (hasCSHeart()) {
                subBuilder.mergeFrom(getCSHeart());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCSHeart(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.randioo.chat_server.protocol.LoginRequest LoginRequest = 1;
      public boolean hasLoginRequest() {
        return result.hasLoginRequest();
      }
      public com.randioo.chat_server.protocol.Login.LoginRequest getLoginRequest() {
        return result.getLoginRequest();
      }
      public Builder setLoginRequest(com.randioo.chat_server.protocol.Login.LoginRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLoginRequest = true;
        result.loginRequest_ = value;
        return this;
      }
      public Builder setLoginRequest(com.randioo.chat_server.protocol.Login.LoginRequest.Builder builderForValue) {
        result.hasLoginRequest = true;
        result.loginRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeLoginRequest(com.randioo.chat_server.protocol.Login.LoginRequest value) {
        if (result.hasLoginRequest() &&
            result.loginRequest_ != com.randioo.chat_server.protocol.Login.LoginRequest.getDefaultInstance()) {
          result.loginRequest_ =
            com.randioo.chat_server.protocol.Login.LoginRequest.newBuilder(result.loginRequest_).mergeFrom(value).buildPartial();
        } else {
          result.loginRequest_ = value;
        }
        result.hasLoginRequest = true;
        return this;
      }
      public Builder clearLoginRequest() {
        result.hasLoginRequest = false;
        result.loginRequest_ = com.randioo.chat_server.protocol.Login.LoginRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatSendRequest ChatSendRequest = 2;
      public boolean hasChatSendRequest() {
        return result.hasChatSendRequest();
      }
      public com.randioo.chat_server.protocol.Chat.ChatSendRequest getChatSendRequest() {
        return result.getChatSendRequest();
      }
      public Builder setChatSendRequest(com.randioo.chat_server.protocol.Chat.ChatSendRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatSendRequest = true;
        result.chatSendRequest_ = value;
        return this;
      }
      public Builder setChatSendRequest(com.randioo.chat_server.protocol.Chat.ChatSendRequest.Builder builderForValue) {
        result.hasChatSendRequest = true;
        result.chatSendRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatSendRequest(com.randioo.chat_server.protocol.Chat.ChatSendRequest value) {
        if (result.hasChatSendRequest() &&
            result.chatSendRequest_ != com.randioo.chat_server.protocol.Chat.ChatSendRequest.getDefaultInstance()) {
          result.chatSendRequest_ =
            com.randioo.chat_server.protocol.Chat.ChatSendRequest.newBuilder(result.chatSendRequest_).mergeFrom(value).buildPartial();
        } else {
          result.chatSendRequest_ = value;
        }
        result.hasChatSendRequest = true;
        return this;
      }
      public Builder clearChatSendRequest() {
        result.hasChatSendRequest = false;
        result.chatSendRequest_ = com.randioo.chat_server.protocol.Chat.ChatSendRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatJoinRoomRequest ChatJoinRoomRequest = 3;
      public boolean hasChatJoinRoomRequest() {
        return result.hasChatJoinRoomRequest();
      }
      public com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest getChatJoinRoomRequest() {
        return result.getChatJoinRoomRequest();
      }
      public Builder setChatJoinRoomRequest(com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatJoinRoomRequest = true;
        result.chatJoinRoomRequest_ = value;
        return this;
      }
      public Builder setChatJoinRoomRequest(com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.Builder builderForValue) {
        result.hasChatJoinRoomRequest = true;
        result.chatJoinRoomRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatJoinRoomRequest(com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest value) {
        if (result.hasChatJoinRoomRequest() &&
            result.chatJoinRoomRequest_ != com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.getDefaultInstance()) {
          result.chatJoinRoomRequest_ =
            com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.newBuilder(result.chatJoinRoomRequest_).mergeFrom(value).buildPartial();
        } else {
          result.chatJoinRoomRequest_ = value;
        }
        result.hasChatJoinRoomRequest = true;
        return this;
      }
      public Builder clearChatJoinRoomRequest() {
        result.hasChatJoinRoomRequest = false;
        result.chatJoinRoomRequest_ = com.randioo.chat_server.protocol.Chat.ChatJoinRoomRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.ChatQuitRoomRequest ChatQuitRoomRequest = 4;
      public boolean hasChatQuitRoomRequest() {
        return result.hasChatQuitRoomRequest();
      }
      public com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest getChatQuitRoomRequest() {
        return result.getChatQuitRoomRequest();
      }
      public Builder setChatQuitRoomRequest(com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasChatQuitRoomRequest = true;
        result.chatQuitRoomRequest_ = value;
        return this;
      }
      public Builder setChatQuitRoomRequest(com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.Builder builderForValue) {
        result.hasChatQuitRoomRequest = true;
        result.chatQuitRoomRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeChatQuitRoomRequest(com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest value) {
        if (result.hasChatQuitRoomRequest() &&
            result.chatQuitRoomRequest_ != com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.getDefaultInstance()) {
          result.chatQuitRoomRequest_ =
            com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.newBuilder(result.chatQuitRoomRequest_).mergeFrom(value).buildPartial();
        } else {
          result.chatQuitRoomRequest_ = value;
        }
        result.hasChatQuitRoomRequest = true;
        return this;
      }
      public Builder clearChatQuitRoomRequest() {
        result.hasChatQuitRoomRequest = false;
        result.chatQuitRoomRequest_ = com.randioo.chat_server.protocol.Chat.ChatQuitRoomRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.HeartRequest HeartRequest = 5;
      public boolean hasHeartRequest() {
        return result.hasHeartRequest();
      }
      public com.randioo.chat_server.protocol.Heart.HeartRequest getHeartRequest() {
        return result.getHeartRequest();
      }
      public Builder setHeartRequest(com.randioo.chat_server.protocol.Heart.HeartRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeartRequest = true;
        result.heartRequest_ = value;
        return this;
      }
      public Builder setHeartRequest(com.randioo.chat_server.protocol.Heart.HeartRequest.Builder builderForValue) {
        result.hasHeartRequest = true;
        result.heartRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeartRequest(com.randioo.chat_server.protocol.Heart.HeartRequest value) {
        if (result.hasHeartRequest() &&
            result.heartRequest_ != com.randioo.chat_server.protocol.Heart.HeartRequest.getDefaultInstance()) {
          result.heartRequest_ =
            com.randioo.chat_server.protocol.Heart.HeartRequest.newBuilder(result.heartRequest_).mergeFrom(value).buildPartial();
        } else {
          result.heartRequest_ = value;
        }
        result.hasHeartRequest = true;
        return this;
      }
      public Builder clearHeartRequest() {
        result.hasHeartRequest = false;
        result.heartRequest_ = com.randioo.chat_server.protocol.Heart.HeartRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.randioo.chat_server.protocol.CSHeart CSHeart = 6;
      public boolean hasCSHeart() {
        return result.hasCSHeart();
      }
      public com.randioo.chat_server.protocol.Heart.CSHeart getCSHeart() {
        return result.getCSHeart();
      }
      public Builder setCSHeart(com.randioo.chat_server.protocol.Heart.CSHeart value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCSHeart = true;
        result.cSHeart_ = value;
        return this;
      }
      public Builder setCSHeart(com.randioo.chat_server.protocol.Heart.CSHeart.Builder builderForValue) {
        result.hasCSHeart = true;
        result.cSHeart_ = builderForValue.build();
        return this;
      }
      public Builder mergeCSHeart(com.randioo.chat_server.protocol.Heart.CSHeart value) {
        if (result.hasCSHeart() &&
            result.cSHeart_ != com.randioo.chat_server.protocol.Heart.CSHeart.getDefaultInstance()) {
          result.cSHeart_ =
            com.randioo.chat_server.protocol.Heart.CSHeart.newBuilder(result.cSHeart_).mergeFrom(value).buildPartial();
        } else {
          result.cSHeart_ = value;
        }
        result.hasCSHeart = true;
        return this;
      }
      public Builder clearCSHeart() {
        result.hasCSHeart = false;
        result.cSHeart_ = com.randioo.chat_server.protocol.Heart.CSHeart.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.chat_server.protocol.CS)
    }
    
    static {
      defaultInstance = new CS(true);
      com.randioo.chat_server.protocol.ClientMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.chat_server.protocol.CS)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_chat_server_protocol_CS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_chat_server_protocol_CS_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023ClientMessage.proto\022 com.randioo.chat_" +
      "server.protocol\032\nChat.proto\032\013Login.proto" +
      "\032\013Heart.proto\"\300\003\n\002CS\022D\n\014LoginRequest\030\001 \001" +
      "(\0132..com.randioo.chat_server.protocol.Lo" +
      "ginRequest\022J\n\017ChatSendRequest\030\002 \001(\01321.co" +
      "m.randioo.chat_server.protocol.ChatSendR" +
      "equest\022R\n\023ChatJoinRoomRequest\030\003 \001(\01325.co" +
      "m.randioo.chat_server.protocol.ChatJoinR" +
      "oomRequest\022R\n\023ChatQuitRoomRequest\030\004 \001(\0132" +
      "5.com.randioo.chat_server.protocol.ChatQ",
      "uitRoomRequest\022D\n\014HeartRequest\030\005 \001(\0132..c" +
      "om.randioo.chat_server.protocol.HeartReq" +
      "uest\022:\n\007CSHeart\030\006 \001(\0132).com.randioo.chat" +
      "_server.protocol.CSHeart"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_chat_server_protocol_CS_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_chat_server_protocol_CS_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_chat_server_protocol_CS_descriptor,
              new java.lang.String[] { "LoginRequest", "ChatSendRequest", "ChatJoinRoomRequest", "ChatQuitRoomRequest", "HeartRequest", "CSHeart", },
              com.randioo.chat_server.protocol.ClientMessage.CS.class,
              com.randioo.chat_server.protocol.ClientMessage.CS.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.randioo.chat_server.protocol.Chat.getDescriptor(),
          com.randioo.chat_server.protocol.Login.getDescriptor(),
          com.randioo.chat_server.protocol.Heart.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
